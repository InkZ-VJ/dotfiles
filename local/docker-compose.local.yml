# version: "3.8"
services:
  mongodb:
    image:
    container_name: mongodb
    restart: always
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    volumes:
      - mongo-data:/data/db
    ports:
      - 27017:27017
    healthcheck:
      test: >
        echo "try { rs.status() } catch (err) {  rs.initiate({_id: 'rs0', members: [{_id: 0, host: 'localhost:27017'}]})  }" | mongosh --port 27017 --quiet

      interval: 5s
      timeout: 30s
      start_period: 0s
      retries: 30
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    command: ["redis-server", "--appendonly", "yes"]
    environment:
      REDIS_PASSWORD: "admin"
      REDIS_USERNAME: "admin"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: localuser
      POSTGRES_PASSWORD: localpassword
      POSTGRES_DB: localdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U localuser -d localdb"]
      interval: 5s
      timeout: 10s
      retries: 5
volumes:
  postgres-data:
  mongo-data:
